# CrowdStrike Installer
# Version 1.3
# Define Variables Here
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#This script is not officially supported by Pax8 or CrowdStrike. 

# Falcon Customer ID:
$FalconCID = "Enter CID"

# Set the URL for the CrowdStrike agent installer
$DownloadURL = "Enter URL"

#Do not edit Below this line
function Get-CrowdStrikeInstalled {
    $Global:installed = (Get-ItemProperty -Path "HKLM:\SOFTWARE\CrowdStrike" -ErrorAction SilentlyContinue).DisplayName -contains "CrowdStrike"
    $Global:CSservice = Get-Service -Name "CSFalconService" -ErrorAction SilentlyContinue
}

#CrowdStrike Installation
Write-Host "Starting the CrowdStrike Installation based on the variables defined in the site"
Write-Host ""
Write-Host "Checking to see if CrowdStrike is already installed"

Get-CrowdStrikeInstalled
if ($installed) {
    Write-Host "--CrowdStrike Sensor already installed"
    if ($CSservice.Status -eq "Running") {
        Write-Host "--CSFalconService service is running"
        Exit 0
    } else {
        Write-Host "--CSFalconService service is installed but not running"
        Start-Service -Name "CSFalconService"
        Exit 0
    }
} else {
    Write-Host "--CrowdStrike is not installed"
}

#Check for the Site Variables 
Write-Host ""
Write-Host "Checking the Variables"

if ([string]::IsNullOrEmpty($FalconCID)) {
    Write-Host "--Customer Token not set or missing"
    Exit 1
} else {
    Write-Host "--CustomerToken = $FalconCID"
}

#CrowdStrike Command Line Options
$CSOptions = ""

$arguments = "/install /quiet /norestart CID=$FalconCID $CSOptions"

#Check to see if a previous CrowdStrike Sensor installation process is running
Write-Host ""
Write-Host "Checking to see if CrowdStrike Sensor installation is already running"
if ((Get-Process "CSFalconService" -ErrorAction SilentlyContinue) -eq $null) {
    Write-Host "--CrowdStrike Sensor installation not running"
} else {
    Write-Host "CrowdStrike Sensor installation currently running, will kill the process before continuing"
    Stop-Process -Name "CSFalconService"
}

# Create new folder.
$folderPath = "C:\csinstall"

# Check if the folder already exists
if (-Not (Test-Path -Path $folderPath)) {
    # Create the folder
    New-Item -Path $folderPath -ItemType Directory
    Write-Output "Folder created at $folderPath"
} else {
    Write-Output "Folder already exists at $folderPath"
}

#Download the CrowdStrike Installer
Write-Host ""
Write-Host "Downloading CrowdStrike Sensor Installer"
try {
    Invoke-WebRequest -Uri $DownloadURL -OutFile C:\csinstall\CrowdStrikeSensor.exe
    if (Test-Path c:\csinstall\CrowdStrikeSensor.exe) {
        Write-Host "--CrowdStrike Sensor Installer downloaded successfully"
    } else {
        Write-Host "--CrowdStrike Sensor Installer did not download - Please check Firewall or Web Filter"
        Exit 1
    }
} catch {
    Write-Host "--Failed to download CrowdStrike Sensor Installer: $_"
    Exit 1
}

#Run the installer using the arguments defined above
Write-Host ""
Write-Host "Installing CrowdStrike Sensor:"
Write-Host ""
Write-Host "CrowdStrikeSensor.exe $arguments"
Write-Host ""

Start-Process -FilePath c:\csinstall\CrowdStrikeSensor.exe -ArgumentList $arguments -Wait

$timeout = New-TimeSpan -Minutes 30
$install = [Diagnostics.Stopwatch]::StartNew()
while ($install.Elapsed -lt $timeout) {
    if (Get-Service "CSFalconService" -ErrorAction SilentlyContinue) {
        Write-Host "CSFalconService service found - breaking the loop"
        Break
    }
    Start-Sleep -Seconds 60
}
Write-Host ""
Write-Host "CrowdStrike Sensor Installation Completed"
